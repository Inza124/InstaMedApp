@model IEnumerable<InstaMedData.Models.Visit>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Index";
}
<script src="~/jquery/jquery-1.8.3.min.js"></script>
<script src="~/bootstrap/js/bootstrap.min.js"></script>
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap-lab.css" />

<script>
    $(document).ready(function () {
        $('#dateInput').keyup(function () {
            var inp;
            inp = document.getElementById("dateInput").value;
            var date = inp.substring(0, 3);
            tr = document.getElementsByTagName("tr");

            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[0];
                if (td) {
                    if (td.innerHTML.indexOf(date) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }

        });

        $('#nameInput').keyup(function () {
            var name;
            name = document.getElementById("nameInput").value;
            tr = document.getElementsByTagName("tr");

            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[1];
                if (td) {
                    if (td.innerHTML.indexOf(name) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }

        });
    });

    function StatusFilter(value) {
        var filter, table, tr, td, i;
        var input = value;
        filter = input.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");

        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[2];
            if (td) {
                if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>

<h2>Wizyty</h2>

<div class="form-inline ">
    <div class="form-group">
        <div class="btn-group">
            <button class="btn btn btn-group-sm btn-warning" onclick="StatusFilter('')">Wszystkie</button>
            <button class="btn btn btn-group-sm btn-warning" onclick="StatusFilter('Oczekująca')">Oczekujące</button>
            <button class="btn btn btn-group-sm btn-warning" onclick="StatusFilter('Zrealizowana')">Zrealizowane</button>
            <button class="btn btn btn-group-sm btn-warning" onclick="StatusFilter('Zarchiwizowana')">Zarchiwizowane</button>
        </div>
        <div class="input-group" style="padding-left: 10px;">
            <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>
            <input id="dateInput" type="text" class="form-control" placeholder="Data">
        </div>
        <div class="input-group " style="padding-left: 10px;">
            <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>
            <input id="nameInput" type="text" class="form-control" placeholder="Użytkownik">
        </div>
    </div>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                Data wizyty
            </th>
            <th>
                Zapisany klient
            </th>
            <th>@Html.DisplayNameFor(model => model.Status)</th>
        </tr>
    </thead>
    <tbody id="myTable">
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.dateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.FirstName) @Html.DisplayFor(modelItem => item.User.LastName)
                </td>
                <td>
                    @if (item.Status == "Oczekująca")
                    {
                        <p style="color: darkgoldenrod; font-weight:bold">@Html.DisplayFor(modelItem => item.Status)</p>
                    }
                    @if (item.Status == "Zrealizowana")
                    {
                        <p style="color: dodgerblue; font-weight:bold">@Html.DisplayFor(modelItem => item.Status)</p>
                    }
                    @if (item.Status == "Zarchiwizowana")
                    {
                        <p style="color: red; font-weight:bold">@Html.DisplayFor(modelItem => item.Status)</p>
                    }
                </td>
                <td>
                    @if (item.Status == "Oczekująca")
                    {
                        <button type="button" class="btn btn-sm btn-primary" onclick="location.href='@Url.Action("Realize", "Visit", new {id = item.Id })'"> Zrealizuj</button>
                    }
                    @if (item.Status == "Zrealizowana")
                    {
                        <button type="button" class="btn btn-sm btn-danger" onclick="location.href='@Url.Action("ChooseRes", "Result", new {id = item.Id })'">Wyniki</button>
                    }
                    @if (item.Status == "Zarchiwizowana")
                    {
                        <button type="button" class="btn btn-sm btn-primary" onclick="location.href='@Url.Action("BringBack", "Visit", new {id = item.Id })'"> Przywróć</button>
                    }
                    <button type="button" class="btn btn-sm btn-info" onclick="location.href='@Url.Action("Archive", "Visit", new {id = item.Id })'"> Archiwizuj</button>
                    <button type="button" class="btn btn-sm btn-default" onclick="location.href='@Url.Action("Archive", "Visit", new {id = item.Id })'"> Szczegóły</button>
                </td>
            </tr>
        }
    </tbody>
</table>
